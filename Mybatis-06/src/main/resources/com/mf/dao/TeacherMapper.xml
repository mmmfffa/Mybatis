<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mf.dao.TeacherMapper">
    <select id="getTeacher" resultType="teacher">
        select * from mybatis.tb_teacher
    </select>
    <!--按结果嵌套查询-->
    <select id="getTeacherById" resultMap="TeacherStudent">
        select s.id sid,s.username sname,t.id tid,t.username tname
        from tb_student s,tb_teacher t
        where s.tid=t.id and t.id=#{tid}
    </select>
    <resultMap id="TeacherStudent" type="teacher">
        <result property="id" column="tid"/>
        <result property="username" column="tname"/>
        <!--复杂的属性，我们需要单独处理 对象用association 集合用collection 嵌套查询
          javaType=指定对象属性的类型  List<String>不符合规范
          集合中的泛型信息我们使用offType获取
        -->
        <collection property="students" ofType="student">
            <result property="id" column="sid"/>
            <result property="username" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>
    <!--=============================================================-->
    <!--按子查询方式-->
    <select id="getTeacherById2" resultMap="TeacherStudent2">
        select * from mybatis.tb_teacher where id=#{tid}
    </select>
    <resultMap id="TeacherStudent2" type="teacher">
         <collection property="students" javaType="ArrayList" ofType="student" select="getBtTeacherId" column="id"/>
    </resultMap>
    <select id="getBtTeacherId" resultType="student">
        select * from mybatis.tb_student where tid=#{tid}
    </select>


</mapper>